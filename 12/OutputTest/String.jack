// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents a String object. Implements the String type.
 */
class String {
    field int len;
    field Array str;

    /** Constructs a new empty String with a maximum length of maxLength. */
    constructor String new(int maxLength) {
		let len = 0;
		if (maxLength < 1) {
			let maxLength = 1;
		}
		let str = Array.new(maxLength);
		do Math.init();
		return this;
    }

    /** De-allocates the string and frees its space. */
    method void dispose() {
    	let len = 0;
    	do str.dispose();
		return;
    }

    /** Returns the current length of this String. */
    method int length() {
        return len;
    }

    /** Returns the character at location j. */
    method char charAt(int j) {
    	return str[j];
    }

    /** Sets the j'th character of this string to be c. */
    method void setCharAt(int j, char c) {
    	let str[j] = c;
    	return;
    }

    /** Appends the character c to the end of this String.
     *  Returns this string as the return value. */
    method String appendChar(char c) {
    	let str[len] = c;
		let len = len + 1;
		return this;
    }

    /** Erases the last character from this String. */
    method void eraseLastChar() {
    	let len = len - 1;
    	return;
    }

    /** Returns the integer value of this String until the first non
     *  numeric character. */
    method int intValue() {
        var boolean isNeg;
        var int i, sum;
        let sum = 0;
        let i = 0;
        let isNeg = false;
		
		if (str[i] = 45) {
		    let isNeg = true;
			let i = i + 1;
		}
		
		while (i < len) {
		    // case we finished - return sum
		    if((str[i] < 48) | (str[i] > 57)) {
				return sum;
			} 
			let sum = Math.multiply(sum, 10) + (str[i] - 48);
			let i = i + 1;
		}
		if(isNeg) {
			return -sum;
		}
		return sum;		
    }


    /** recursive func for setInt */
    method void recSetInt(int number) {
        var int divTemp;
        var int mulTemp;
        
        if(number < 10) {
			do appendChar(number + 48);
		}
		else{ 
		    let divTemp = Math.divide(number, 10);
			do recSetInt(divTemp);
			let mulTemp = Math.multiply(divTemp, 10);
			do appendChar((number - mulTemp) + 48);
		}
		return; 
    }
    
    
    /** Sets this String to hold a representation of the given number. */
    method void setInt(int number) {
        let len = 0;
        if(number < 0) {
			// put 45 in str[0]
			let number = Math.abs(number);
			do appendChar(45);
		}
		do recSetInt(number);
		return;
    }

    /** Returns the new line character. */
    function char newLine() {
    	return 128;
    }

    /** Returns the backspace character. */
    function char backSpace() {
        return 129;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
    	return 34;
    }
}
